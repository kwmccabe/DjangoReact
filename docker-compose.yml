version: '3'

services:
    #> docker-compose exec db psql --username=postgres_user --dbname=django_react
    db:
        image: postgres
        container_name: django-react-db
        command: postgres -c config_file=/etc/postgresql/postgresql.conf
        ports:
            - "${SQL_PORT}:5432"
        volumes:
            - ./postgres/conf:/etc/postgresql
            - ./postgres/data:/var/lib/postgresql/data
        environment:
            - POSTGRES_DB=${SQL_DATABASE}
            - POSTGRES_USER=${SQL_USER}
            - POSTGRES_PASSWORD=${SQL_PASS}
        restart: always

    #> docker-compose exec api bash
    api:
        build: ./django/.
        container_name: django-react-api
        command: python manage.py runserver 0.0.0.0:8000
        #command: gunicorn main.wsgi:application --bind 0.0.0.0:8000
        env_file: .env
        ports:
            - "${API_PORT}:8000"
        volumes:
            - ./django:/app
        depends_on:
            - db
        restart: on-failure

    #> docker-compose exec web bash
    web:
        build: ./react/.
        container_name: django-react-web
        command: npm start
#         env_file: .env
        ports:
            - "${WEB_PORT}:3000"
        volumes:
            - ./react:/app
        depends_on:
            - api
        restart: on-failure

    #> docker-compose exec test bash
#     test:
#         image: python:3
#         container_name: django-react-test
#         tty: true


# upgrades ???

#     api:
#         command: >
#             sh -c " python manage.py migrate &&
#               gunicorn restaurant.wsgi:application --bind 0.0.0.0:8000"

#     web:
#         volumes:
#             - ./frontend:/app/frontend
#             - node-modules:/app/frontend/node_modules


